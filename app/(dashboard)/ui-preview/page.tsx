'use client';

import { useState } from 'react';
import { Tender } from '@/lib/supabase';
import { Card } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { 
  FileText, Calendar, DollarSign, MapPin, Pencil, Trash2, 
  ExternalLink, ArrowLeft, CheckCircle2, Clock, AlertCircle
} from 'lucide-react';
import { getStatusColor, formatPrice, formatDate } from '@/lib/tender-utils';
import Link from 'next/link';

export default function DesktopUIPreview() {
  // –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
  const sampleTenders: Tender[] = [
    {
      id: 1,
      name: '–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –∂–∏–ª–æ–≥–æ –∫–æ–º–ø–ª–µ–∫—Å–∞ "–°–æ–ª–Ω–µ—á–Ω—ã–π" –≤ —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–º —Ä–∞–π–æ–Ω–µ –≥–æ—Ä–æ–¥–∞',
      status: '–Ω–æ–≤—ã–π',
      start_price: 15000000,
      win_price: null,
      region: '–ú–æ—Å–∫–≤–∞, –¶–ê–û',
      purchase_number: '0373100000123000001',
      submission_deadline: '2025-11-15',
      link: 'https://zakupki.gov.ru',
      created_at: new Date().toISOString(),
      updated_at: new Date().toISOString(),
      publication_date: '2025-10-20',
      submission_date: '2025-11-10',
      submitted_price: 14500000,
      additional_data: null,
    },
    {
      id: 2,
      name: '–†–µ–º–æ–Ω—Ç –¥–æ—Ä–æ–∂–Ω–æ–≥–æ –ø–æ–∫—Ä—ã—Ç–∏—è –Ω–∞ —É—á–∞—Å—Ç–∫–µ —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω–æ–π —Ç—Ä–∞—Å—Å—ã –ú-7',
      status: '–ø–æ–¥–∞–Ω–æ',
      start_price: 5000000,
      win_price: 4800000,
      region: '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥',
      purchase_number: '0373100000123000002',
      submission_deadline: '2025-11-20',
      link: 'https://zakupki.gov.ru',
      created_at: new Date().toISOString(),
      updated_at: new Date().toISOString(),
      publication_date: '2025-10-18',
      submission_date: '2025-11-15',
      submitted_price: 4800000,
      additional_data: null,
    },
    {
      id: 3,
      name: '–ü–æ—Å—Ç–∞–≤–∫–∞ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –¥–ª—è –º—É–Ω–∏—Ü–∏–ø–∞–ª—å–Ω—ã—Ö –Ω—É–∂–¥',
      status: '–Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏',
      start_price: 2500000,
      win_price: null,
      region: '–ö–∞–∑–∞–Ω—å',
      purchase_number: '0373100000123000003',
      submission_deadline: '2025-11-25',
      link: null,
      created_at: new Date().toISOString(),
      updated_at: new Date().toISOString(),
      publication_date: '2025-10-22',
      submission_date: '2025-11-20',
      submitted_price: 2400000,
      additional_data: null,
    },
  ];

  return (
    <div className="min-h-screen bg-gray-50">
      {/* –®–∞–ø–∫–∞ */}
      <div className="bg-white border-b border-gray-200 sticky top-0 z-10">
        <div className="max-w-7xl mx-auto px-8 py-6">
          <div className="flex items-center gap-4">
            <Link
              href="/tenders"
              className="p-2 hover:bg-gray-100 rounded-xl transition-colors"
            >
              <ArrowLeft className="w-5 h-5" />
            </Link>
            <div>
              <h1 className="text-2xl font-bold text-gray-900">
                2 –Ω–æ–≤—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–∞ –¥–∏–∑–∞–π–Ω–∞
              </h1>
              <p className="text-sm text-gray-500">
                –í–∞—Ä–∏–∞–Ω—Ç 1: –£–ª—É—á—à–µ–Ω–Ω—ã–π —Ç–µ–∫—É—â–∏–π | –í–∞—Ä–∏–∞–Ω—Ç 2: –¢–∞–±–ª–∏—Ü–∞ Notion-style
              </p>
            </div>
          </div>
        </div>
      </div>

      {/* –ö–æ–Ω—Ç–µ–Ω—Ç */}
      <div className="max-w-7xl mx-auto px-8 py-8 space-y-12">
        
        {/* –í–ê–†–ò–ê–ù–¢ 1: –£–ª—É—á—à–µ–Ω–Ω—ã–π —Ç–µ–∫—É—â–∏–π */}
        <div>
          <div className="mb-6">
            <h2 className="text-xl font-bold text-gray-900 mb-2">
              ‚ú® –í–∞—Ä–∏–∞–Ω—Ç 1: –£–ª—É—á—à–µ–Ω–Ω—ã–π —Ç–µ–∫—É—â–∏–π
            </h2>
            <p className="text-sm text-gray-600">
              –¢–≤–æ–π –¥–∏–∑–∞–π–Ω, –Ω–æ —Å –Ω–µ–±–æ–ª—å—à–∏–º–∏ —É–ª—É—á—à–µ–Ω–∏—è–º–∏: —Ü–≤–µ—Ç–Ω—ã–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã, –ª—É—á—à–∏–µ –æ—Ç—Å—Ç—É–ø—ã, —á–µ—Ç—á–µ –∏–µ—Ä–∞—Ä—Ö–∏—è
            </p>
          </div>
          
          <div className="grid gap-4">
            {sampleTenders.map((tender) => {
              const getBorderColor = (status: string) => {
                switch (status) {
                  case '–Ω–æ–≤—ã–π': return 'border-l-blue-500';
                  case '–ø–æ–¥–∞–Ω–æ': return 'border-l-green-500';
                  case '–Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏': return 'border-l-yellow-500';
                  case '–≤ —Ä–∞–±–æ—Ç–µ': return 'border-l-orange-500';
                  case '–ø–æ–±–µ–¥–∞': return 'border-l-purple-500';
                  default: return 'border-l-gray-400';
                }
              };

              return (
                <Card 
                  key={`v1-${tender.id}`}
                  className={`
                    p-4 hover:shadow-lg transition-shadow cursor-pointer
                    border-l-4 ${getBorderColor(tender.status)}
                  `}
                >
                  <div className="flex flex-col gap-3">
                    {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –¥–µ–π—Å—Ç–≤–∏—è */}
                    <div className="flex items-start justify-between gap-3">
                      <div className="flex-1 min-w-0">
                        <div className="flex items-center gap-2 mb-2">
                          <FileText className="h-4 w-4 text-gray-400 flex-shrink-0" />
                          <h3 className="font-semibold text-base text-gray-900">{tender.name}</h3>
                        </div>
                        <div className="flex items-center gap-2">
                          <span className={`inline-flex px-2.5 py-1 rounded-lg text-xs font-medium ${getStatusColor(tender.status)}`}>
                            {tender.status}
                          </span>
                          {tender.purchase_number && (
                            <span className="text-xs text-gray-400 font-mono">
                              ‚Ññ {tender.purchase_number}
                            </span>
                          )}
                        </div>
                      </div>
                      <div className="flex items-center gap-2 flex-shrink-0">
                        {tender.link && (
                          <Button variant="outline" size="sm" className="h-8 gap-1.5">
                            <ExternalLink className="h-3.5 w-3.5" />
                            <span className="text-xs">–ü–ª–æ—â–∞–¥–∫–∞</span>
                          </Button>
                        )}
                        <Button variant="ghost" size="sm" className="h-8 w-8 p-0">
                          <Pencil className="h-4 w-4" />
                        </Button>
                        <Button variant="ghost" size="sm" className="h-8 w-8 p-0 text-red-600 hover:bg-red-50">
                          <Trash2 className="h-4 w-4" />
                        </Button>
                      </div>
                    </div>

                    {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è - —Å–µ—Ç–∫–∞ */}
                    <div className="grid grid-cols-5 gap-4 text-sm">
                      <div className="flex items-center gap-2">
                        <MapPin className="h-4 w-4 text-gray-400" />
                        <div>
                          <p className="text-xs text-gray-500">–†–µ–≥–∏–æ–Ω</p>
                          <p className="font-medium text-gray-900">{tender.region}</p>
                        </div>
                      </div>
                      <div className="flex items-center gap-2">
                        <DollarSign className="h-4 w-4 text-blue-500" />
                        <div>
                          <p className="text-xs text-gray-500">–ù–∞—á–∞–ª—å–Ω–∞—è</p>
                          <p className="font-medium text-gray-900">{formatPrice(tender.start_price)}</p>
                        </div>
                      </div>
                      <div className="flex items-center gap-2">
                        <DollarSign className="h-4 w-4 text-green-500" />
                        <div>
                          <p className="text-xs text-gray-500">–ü–æ–¥–∞–Ω–Ω–∞—è</p>
                          <p className="font-medium text-green-700">{formatPrice(tender.submitted_price)}</p>
                        </div>
                      </div>
                      <div className="flex items-center gap-2">
                        <Calendar className="h-4 w-4 text-purple-500" />
                        <div>
                          <p className="text-xs text-gray-500">–ü–æ–¥–∞—á–∞</p>
                          <p className="font-medium text-gray-900">{formatDate(tender.submission_date)}</p>
                        </div>
                      </div>
                      <div className="flex items-center gap-2">
                        <Clock className="h-4 w-4 text-orange-500" />
                        <div>
                          <p className="text-xs text-gray-500">–î–µ–¥–ª–∞–π–Ω</p>
                          <p className="font-medium text-gray-900">{formatDate(tender.submission_deadline)}</p>
                        </div>
                      </div>
                    </div>
                  </div>
                </Card>
              );
            })}
          </div>
        </div>

        {/* –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å */}
        <div className="relative">
          <div className="absolute inset-0 flex items-center">
            <div className="w-full border-t-2 border-gray-300"></div>
          </div>
          <div className="relative flex justify-center">
            <span className="bg-gray-50 px-6 text-lg font-bold text-gray-500">
              VS
            </span>
          </div>
        </div>

        {/* –í–ê–†–ò–ê–ù–¢ 2: –¢–∞–±–ª–∏—Ü–∞ Notion-style */}
        <div>
          <div className="mb-6">
            <h2 className="text-xl font-bold text-gray-900 mb-2">
              üéØ –í–∞—Ä–∏–∞–Ω—Ç 2: –¢–∞–±–ª–∏—Ü–∞ (Notion-style)
            </h2>
            <p className="text-sm text-gray-600">
              –°–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –¥—Ä—É–≥–æ–π –ø–æ–¥—Ö–æ–¥ - –∫–æ–º–ø–∞–∫—Ç–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ —Å hover —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏, –∫–∞–∫ –≤ Notion
            </p>
          </div>
          
          <Card className="overflow-hidden">
            {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–∞–±–ª–∏—Ü—ã */}
            <div className="bg-gray-50 border-b border-gray-200 px-4 py-3">
              <div className="grid grid-cols-12 gap-4 text-xs font-medium text-gray-500 uppercase tracking-wider">
                <div className="col-span-4">–ù–∞–∑–≤–∞–Ω–∏–µ</div>
                <div className="col-span-2">–°—Ç–∞—Ç—É—Å</div>
                <div className="col-span-2">–¶–µ–Ω—ã</div>
                <div className="col-span-2">–†–µ–≥–∏–æ–Ω</div>
                <div className="col-span-1">–î–µ–¥–ª–∞–π–Ω</div>
                <div className="col-span-1 text-right">–î–µ–π—Å—Ç–≤–∏—è</div>
              </div>
            </div>

            {/* –°—Ç—Ä–æ–∫–∏ —Ç–∞–±–ª–∏—Ü—ã */}
            <div className="divide-y divide-gray-100">
              {sampleTenders.map((tender) => {
                const getStatusIcon = (status: string) => {
                  switch (status) {
                    case '–ø–æ–¥–∞–Ω–æ': return <CheckCircle2 className="w-4 h-4 text-green-500" />;
                    case '–Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏': return <Clock className="w-4 h-4 text-yellow-500" />;
                    case '–Ω–æ–≤—ã–π': return <AlertCircle className="w-4 h-4 text-blue-500" />;
                    default: return null;
                  }
                };

                const getStatusDot = (status: string) => {
                  switch (status) {
                    case '–Ω–æ–≤—ã–π': return 'bg-blue-500';
                    case '–ø–æ–¥–∞–Ω–æ': return 'bg-green-500';
                    case '–Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏': return 'bg-yellow-500';
                    case '–≤ —Ä–∞–±–æ—Ç–µ': return 'bg-orange-500';
                    case '–ø–æ–±–µ–¥–∞': return 'bg-purple-500';
                    default: return 'bg-gray-400';
                  }
                };

                return (
                  <div 
                    key={`v2-${tender.id}`}
                    className="px-4 py-3 hover:bg-gray-50 transition-colors cursor-pointer group"
                  >
                    <div className="grid grid-cols-12 gap-4 items-center">
                      {/* –ù–∞–∑–≤–∞–Ω–∏–µ */}
                      <div className="col-span-4">
                        <div className="flex items-center gap-2">
                          <FileText className="h-4 w-4 text-gray-400 flex-shrink-0" />
                          <div className="min-w-0 flex-1">
                            <p className="text-sm font-medium text-gray-900 truncate group-hover:text-indigo-600 transition-colors">
                              {tender.name}
                            </p>
                            {tender.purchase_number && (
                              <p className="text-xs text-gray-400 font-mono mt-0.5">
                                ‚Ññ {tender.purchase_number}
                              </p>
                            )}
                          </div>
                        </div>
                      </div>

                      {/* –°—Ç–∞—Ç—É—Å */}
                      <div className="col-span-2">
                        <div className="flex items-center gap-2">
                          <div className={`w-2 h-2 rounded-full ${getStatusDot(tender.status)}`}></div>
                          <span className="text-sm text-gray-700">{tender.status}</span>
                        </div>
                      </div>

                      {/* –¶–µ–Ω—ã */}
                      <div className="col-span-2">
                        <div className="text-sm">
                          <p className="font-medium text-gray-900">{formatPrice(tender.start_price)}</p>
                          {tender.submitted_price && (
                            <p className="text-xs text-green-600 mt-0.5">
                              ‚Üí {formatPrice(tender.submitted_price)}
                            </p>
                          )}
                        </div>
                      </div>

                      {/* –†–µ–≥–∏–æ–Ω */}
                      <div className="col-span-2">
                        <div className="flex items-center gap-1.5">
                          <MapPin className="h-3.5 w-3.5 text-gray-400" />
                          <span className="text-sm text-gray-700">{tender.region}</span>
                        </div>
                      </div>

                      {/* –î–µ–¥–ª–∞–π–Ω */}
                      <div className="col-span-1">
                        <div className="flex items-center gap-1.5">
                          <Calendar className="h-3.5 w-3.5 text-gray-400" />
                          <span className="text-xs text-gray-600">{formatDate(tender.submission_deadline)}</span>
                        </div>
                      </div>

                      {/* –î–µ–π—Å—Ç–≤–∏—è */}
                      <div className="col-span-1 flex items-center justify-end gap-1 opacity-0 group-hover:opacity-100 transition-opacity">
                        {tender.link && (
                          <Button variant="ghost" size="sm" className="h-7 w-7 p-0">
                            <ExternalLink className="h-3.5 w-3.5" />
                          </Button>
                        )}
                        <Button variant="ghost" size="sm" className="h-7 w-7 p-0">
                          <Pencil className="h-3.5 w-3.5" />
                        </Button>
                        <Button variant="ghost" size="sm" className="h-7 w-7 p-0 text-red-600 hover:bg-red-50">
                          <Trash2 className="h-3.5 w-3.5" />
                        </Button>
                      </div>
                    </div>
                  </div>
                );
              })}
            </div>
          </Card>
        </div>

        {/* –°—Ä–∞–≤–Ω–µ–Ω–∏–µ */}
        <Card className="p-8 bg-gradient-to-br from-indigo-50 to-white">
          <h3 className="text-xl font-bold text-gray-900 mb-6">
            üìä –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
          </h3>
          
          <div className="grid md:grid-cols-2 gap-8">
            {/* –í–∞—Ä–∏–∞–Ω—Ç 1 */}
            <div>
              <h4 className="font-semibold text-gray-900 mb-3">‚ú® –í–∞—Ä–∏–∞–Ω—Ç 1: –£–ª—É—á—à–µ–Ω–Ω—ã–π</h4>
              <div className="space-y-2 text-sm">
                <div className="flex items-start gap-2">
                  <CheckCircle2 className="w-4 h-4 text-green-500 mt-0.5 flex-shrink-0" />
                  <span className="text-gray-700">–ü—Ä–∏–≤—ã—á–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–∞—Ä—Ç–æ—á–µ–∫</span>
                </div>
                <div className="flex items-start gap-2">
                  <CheckCircle2 className="w-4 h-4 text-green-500 mt-0.5 flex-shrink-0" />
                  <span className="text-gray-700">–¶–≤–µ—Ç–Ω—ã–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã —Å–ª–µ–≤–∞</span>
                </div>
                <div className="flex items-start gap-2">
                  <CheckCircle2 className="w-4 h-4 text-green-500 mt-0.5 flex-shrink-0" />
                  <span className="text-gray-700">–¶–≤–µ—Ç–Ω—ã–µ –∏–∫–æ–Ω–∫–∏ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö</span>
                </div>
                <div className="flex items-start gap-2">
                  <CheckCircle2 className="w-4 h-4 text-green-500 mt-0.5 flex-shrink-0" />
                  <span className="text-gray-700">–•–æ—Ä–æ—à–æ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞</span>
                </div>
                <div className="flex items-start gap-2">
                  <AlertCircle className="w-4 h-4 text-orange-500 mt-0.5 flex-shrink-0" />
                  <span className="text-gray-700">–ó–∞–Ω–∏–º–∞–µ—Ç –±–æ–ª—å—à–µ –º–µ—Å—Ç–∞</span>
                </div>
              </div>
            </div>

            {/* –í–∞—Ä–∏–∞–Ω—Ç 2 */}
            <div>
              <h4 className="font-semibold text-gray-900 mb-3">üéØ –í–∞—Ä–∏–∞–Ω—Ç 2: –¢–∞–±–ª–∏—Ü–∞</h4>
              <div className="space-y-2 text-sm">
                <div className="flex items-start gap-2">
                  <CheckCircle2 className="w-4 h-4 text-green-500 mt-0.5 flex-shrink-0" />
                  <span className="text-gray-700">–û—á–µ–Ω—å –∫–æ–º–ø–∞–∫—Ç–Ω–æ - –º–Ω–æ–≥–æ –Ω–∞ —ç–∫—Ä–∞–Ω–µ</span>
                </div>
                <div className="flex items-start gap-2">
                  <CheckCircle2 className="w-4 h-4 text-green-500 mt-0.5 flex-shrink-0" />
                  <span className="text-gray-700">–õ–µ–≥–∫–æ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫</span>
                </div>
                <div className="flex items-start gap-2">
                  <CheckCircle2 className="w-4 h-4 text-green-500 mt-0.5 flex-shrink-0" />
                  <span className="text-gray-700">–°—Ç–∏–ª—å Notion - —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ</span>
                </div>
                <div className="flex items-start gap-2">
                  <CheckCircle2 className="w-4 h-4 text-green-500 mt-0.5 flex-shrink-0" />
                  <span className="text-gray-700">Hover —ç—Ñ—Ñ–µ–∫—Ç—ã - –∫–Ω–æ–ø–∫–∏ –ø–æ—è–≤–ª—è—é—Ç—Å—è</span>
                </div>
                <div className="flex items-start gap-2">
                  <AlertCircle className="w-4 h-4 text-orange-500 mt-0.5 flex-shrink-0" />
                  <span className="text-gray-700">–ù–µ–ø—Ä–∏–≤—ã—á–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç</span>
                </div>
              </div>
            </div>
          </div>
        </Card>
      </div>
    </div>
  );
}
