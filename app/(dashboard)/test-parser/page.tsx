'use client';

import { useState } from 'react';
import { Card } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Textarea } from '@/components/ui/textarea';
import { Loader2, Link as LinkIcon, Sparkles, Copy, CheckCircle, AlertCircle } from 'lucide-react';
import { toast } from 'sonner';

interface ParsedTender {
  name: string;
  purchase_number: string;
  link: string;
  region: string;
  publication_date: string;
  submission_deadline: string;
  start_price: number | null;
}

export default function TestParserPage() {
  const [url, setUrl] = useState('');
  const [htmlContent, setHtmlContent] = useState('');
  const [isParsing, setIsParsing] = useState(false);
  const [parsedData, setParsedData] = useState<ParsedTender | null>(null);
  const [error, setError] = useState('');
  const [errorHint, setErrorHint] = useState('');
  const [useMode, setUseMode] = useState<'url' | 'html'>('url');

  // –ü–∞—Ä—Å–∏–Ω–≥ —á–µ—Ä–µ–∑ –ò–ò
  const handleParse = async () => {
    if (useMode === 'url' && !url.trim()) {
      toast.error('–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–µ–Ω–¥–µ—Ä');
      return;
    }

    if (useMode === 'html' && !htmlContent.trim()) {
      toast.error('–í—Å—Ç–∞–≤—å—Ç–µ HTML –∫–æ–¥ —Å—Ç—Ä–∞–Ω–∏—Ü—ã');
      return;
    }

    setIsParsing(true);
    setError('');
    setErrorHint('');
    setParsedData(null);

    try {
      const response = await fetch('/api/parse-tender', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          url: useMode === 'url' ? url : null,
          html: useMode === 'html' ? htmlContent : null,
        }),
      });

      const result = await response.json();

      if (!response.ok) {
        const errorMsg = result.error || '–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞';
        const hint = result.hint || '';
        
        setError(errorMsg);
        setErrorHint(hint);
        toast.error('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞', { 
          description: errorMsg,
          duration: 8000 
        });
        throw new Error(errorMsg);
      }

      setParsedData(result.data);
      toast.success('‚úÖ –¢–µ–Ω–¥–µ—Ä —É—Å–ø–µ—à–Ω–æ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω!');
    } catch (err: any) {
      if (!error) { // –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—â—ë –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –æ—à–∏–±–∫–∞ –≤—ã—à–µ
        setError(err.message);
        toast.error('–û—à–∏–±–∫–∞', { description: err.message });
      }
    } finally {
      setIsParsing(false);
    }
  };

  // –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å JSON
  const handleCopyJson = () => {
    if (!parsedData) return;
    navigator.clipboard.writeText(JSON.stringify(parsedData, null, 2));
    toast.success('JSON —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞');
  };

  // –î–æ–±–∞–≤–∏—Ç—å –≤ CRM
  const handleAddToCRM = () => {
    if (!parsedData) return;
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –≤ —Ñ–æ—Ä–º—É
    localStorage.setItem('parsedTender', JSON.stringify(parsedData));
    
    // –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ç–µ–Ω–¥–µ—Ä–æ–≤ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º
    window.location.href = '/tenders?action=add-from-parser';
    
    toast.success('–ü–µ—Ä–µ—Ö–æ–¥ –∫ —Ñ–æ—Ä–º–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è...');
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 via-white to-slate-50 p-6">
      <div className="max-w-6xl mx-auto space-y-6">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="text-center mb-8">
          <h1 className="text-4xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent mb-2">
            ü§ñ –¢–µ—Å—Ç–æ–≤—ã–π –ø–∞—Ä—Å–µ—Ä —Ç–µ–Ω–¥–µ—Ä–æ–≤
          </h1>
          <p className="text-gray-600">
            –í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –∏–ª–∏ HTML –∫–æ–¥ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ç–µ–Ω–¥–µ—Ä–∞ - –ò–ò –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–∑–≤–ª–µ—á—ë—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
          </p>
        </div>

        <div className="grid gap-6 lg:grid-cols-2">
          {/* –õ–µ–≤–∞—è –ø–∞–Ω–µ–ª—å - –í–≤–æ–¥ */}
          <Card className="p-6 shadow-xl border-2 border-blue-100">
            <div className="space-y-6">
              {/* –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ä–µ–∂–∏–º–∞ */}
              <div className="flex gap-2 p-1 bg-gray-100 rounded-lg">
                <Button
                  onClick={() => setUseMode('url')}
                  variant={useMode === 'url' ? 'default' : 'ghost'}
                  className="flex-1"
                  size="sm"
                >
                  <LinkIcon className="h-4 w-4 mr-2" />
                  –ü–æ —Å—Å—ã–ª–∫–µ
                </Button>
                <Button
                  onClick={() => setUseMode('html')}
                  variant={useMode === 'html' ? 'default' : 'ghost'}
                  className="flex-1"
                  size="sm"
                >
                  <Sparkles className="h-4 w-4 mr-2" />
                  –ü–æ HTML
                </Button>
              </div>

              {/* –ü–æ–ª–µ –≤–≤–æ–¥–∞ URL */}
              {useMode === 'url' && (
                <div className="space-y-2">
                  <Label htmlFor="url" className="text-sm font-medium">
                    –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–µ–Ω–¥–µ—Ä
                  </Label>
                  <Input
                    id="url"
                    type="url"
                    value={url}
                    onChange={(e) => setUrl(e.target.value)}
                    placeholder="https://tender-site.ru/tender/12345"
                    className="h-12 text-sm"
                    disabled={isParsing}
                  />
                  <p className="text-xs text-gray-500">
                    üí° –í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É —Å –ª—é–±–æ–≥–æ —Å–∞–π—Ç–∞ —Ç–µ–Ω–¥–µ—Ä–æ–≤
                  </p>
                </div>
              )}

              {/* –ü–æ–ª–µ –≤–≤–æ–¥–∞ HTML */}
              {useMode === 'html' && (
                <div className="space-y-2">
                  <Label htmlFor="html" className="text-sm font-medium">
                    HTML –∫–æ–¥ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                  </Label>
                  <Textarea
                    id="html"
                    value={htmlContent}
                    onChange={(e) => setHtmlContent(e.target.value)}
                    placeholder="<html>...</html>"
                    className="min-h-[300px] font-mono text-xs"
                    disabled={isParsing}
                  />
                  <p className="text-xs text-gray-500">
                    üí° –û—Ç–∫—Ä–æ–π—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ç–µ–Ω–¥–µ—Ä–∞ ‚Üí Ctrl+U (–∏–ª–∏ Cmd+Option+U) ‚Üí –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–æ–¥ ‚Üí –í—Å—Ç–∞–≤—å—Ç–µ —Å—é–¥–∞
                  </p>
                </div>
              )}

              {/* –ö–Ω–æ–ø–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ */}
              <Button
                onClick={handleParse}
                disabled={isParsing}
                className="w-full h-12 bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white font-semibold shadow-lg"
              >
                {isParsing ? (
                  <>
                    <Loader2 className="h-5 w-5 mr-2 animate-spin" />
                    –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —á–µ—Ä–µ–∑ –ò–ò...
                  </>
                ) : (
                  <>
                    <Sparkles className="h-5 w-5 mr-2" />
                    –†–∞—Å–ø–∞—Ä—Å–∏—Ç—å —Ç–µ–Ω–¥–µ—Ä
                  </>
                )}
              </Button>

              {/* –û—à–∏–±–∫–∞ */}
              {error && (
                <div className="space-y-3">
                  <div className="p-4 bg-red-50 border border-red-200 rounded-lg flex items-start gap-3">
                    <AlertCircle className="h-5 w-5 text-red-600 flex-shrink-0 mt-0.5" />
                    <div>
                      <p className="text-sm font-medium text-red-900">–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞</p>
                      <p className="text-xs text-red-700 mt-1">{error}</p>
                    </div>
                  </div>
                  
                  {errorHint && (
                    <div className="p-4 bg-blue-50 border border-blue-200 rounded-lg flex items-start gap-3">
                      <Sparkles className="h-5 w-5 text-blue-600 flex-shrink-0 mt-0.5" />
                      <div>
                        <p className="text-sm font-medium text-blue-900">üí° –ö–∞–∫ –∏—Å–ø—Ä–∞–≤–∏—Ç—å:</p>
                        <p className="text-xs text-blue-700 mt-1 whitespace-pre-line">{errorHint}</p>
                      </div>
                    </div>
                  )}
                </div>
              )}
            </div>
          </Card>

          {/* –ü—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å - –†–µ–∑—É–ª—å—Ç–∞—Ç */}
          <Card className="p-6 shadow-xl border-2 border-green-100">
            <div className="space-y-4">
              <div className="flex items-center justify-between mb-4">
                <h3 className="text-lg font-semibold text-gray-900">
                  –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–∞—Ä—Å–∏–Ω–≥–∞
                </h3>
                {parsedData && (
                  <Button
                    onClick={handleCopyJson}
                    variant="outline"
                    size="sm"
                  >
                    <Copy className="h-4 w-4 mr-2" />
                    –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å JSON
                  </Button>
                )}
              </div>

              {!parsedData && !error && (
                <div className="flex flex-col items-center justify-center py-16 text-center">
                  <Sparkles className="h-16 w-16 text-gray-300 mb-4" />
                  <p className="text-gray-500">
                    –í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –∏–ª–∏ HTML –∏ –Ω–∞–∂–º–∏—Ç–µ "–†–∞—Å–ø–∞—Ä—Å–∏—Ç—å"
                  </p>
                </div>
              )}

              {parsedData && (
                <div className="space-y-4">
                  {/* –£—Å–ø–µ—Ö */}
                  <div className="p-4 bg-green-50 border border-green-200 rounded-lg flex items-center gap-3">
                    <CheckCircle className="h-5 w-5 text-green-600" />
                    <p className="text-sm font-medium text-green-900">
                      –¢–µ–Ω–¥–µ—Ä —É—Å–ø–µ—à–Ω–æ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω –ò–ò
                    </p>
                  </div>

                  {/* –ü–æ–ª—è */}
                  <div className="space-y-3">
                    <div className="p-3 bg-white border rounded-lg">
                      <Label className="text-xs text-gray-500">–ù–∞–∑–≤–∞–Ω–∏–µ</Label>
                      <p className="text-sm font-medium mt-1">{parsedData.name || '‚Äî'}</p>
                    </div>

                    <div className="p-3 bg-white border rounded-lg">
                      <Label className="text-xs text-gray-500">–ù–æ–º–µ—Ä –∑–∞–∫—É–ø–∫–∏</Label>
                      <p className="text-sm font-medium mt-1">{parsedData.purchase_number || '‚Äî'}</p>
                    </div>

                    <div className="p-3 bg-white border rounded-lg">
                      <Label className="text-xs text-gray-500">–†–µ–≥–∏–æ–Ω</Label>
                      <p className="text-sm font-medium mt-1">{parsedData.region || '‚Äî'}</p>
                    </div>

                    <div className="grid grid-cols-2 gap-3">
                      <div className="p-3 bg-white border rounded-lg">
                        <Label className="text-xs text-gray-500">–î–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏</Label>
                        <p className="text-sm font-medium mt-1">{parsedData.publication_date || '‚Äî'}</p>
                      </div>

                      <div className="p-3 bg-white border rounded-lg">
                        <Label className="text-xs text-gray-500">–î–µ–¥–ª–∞–π–Ω</Label>
                        <p className="text-sm font-medium mt-1">{parsedData.submission_deadline || '‚Äî'}</p>
                      </div>
                    </div>

                    <div className="p-3 bg-white border rounded-lg">
                      <Label className="text-xs text-gray-500">–ù–∞—á–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞</Label>
                      <p className="text-sm font-medium mt-1">
                        {parsedData.start_price 
                          ? new Intl.NumberFormat('ru-RU', { style: 'currency', currency: 'RUB' }).format(parsedData.start_price)
                          : '‚Äî'
                        }
                      </p>
                    </div>

                    <div className="p-3 bg-white border rounded-lg">
                      <Label className="text-xs text-gray-500">–°—Å—ã–ª–∫–∞</Label>
                      <p className="text-xs text-blue-600 mt-1 truncate">{parsedData.link || '‚Äî'}</p>
                    </div>
                  </div>

                  {/* –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è */}
                  <Button
                    onClick={handleAddToCRM}
                    className="w-full h-12 bg-gradient-to-r from-green-600 to-emerald-600 hover:from-green-700 hover:to-emerald-700 text-white font-semibold shadow-lg"
                  >
                    <CheckCircle className="h-5 w-5 mr-2" />
                    –î–æ–±–∞–≤–∏—Ç—å —Ç–µ–Ω–¥–µ—Ä –≤ CRM
                  </Button>
                </div>
              )}
            </div>
          </Card>
        </div>

        {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è */}
        <Card className="p-6 bg-gradient-to-r from-blue-50 to-purple-50 border-2 border-blue-200">
          <h3 className="font-semibold text-gray-900 mb-3 flex items-center gap-2">
            <Sparkles className="h-5 w-5 text-blue-600" />
            –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:
          </h3>
          <div className="space-y-2 text-sm text-gray-700">
            <p><strong>–°–ø–æ—Å–æ–± 1 (–°—Å—ã–ª–∫–∞):</strong></p>
            <ol className="list-decimal list-inside space-y-1 ml-4">
              <li>–°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–µ–Ω–¥–µ—Ä</li>
              <li>–í—Å—Ç–∞–≤—å—Ç–µ –≤ –ø–æ–ª–µ "–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–µ–Ω–¥–µ—Ä"</li>
              <li>–ù–∞–∂–º–∏—Ç–µ "–†–∞—Å–ø–∞—Ä—Å–∏—Ç—å —Ç–µ–Ω–¥–µ—Ä"</li>
              <li>–ò–ò –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–∑–≤–ª–µ—á—ë—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ</li>
            </ol>

            <p className="mt-4"><strong>–°–ø–æ—Å–æ–± 2 (HTML):</strong></p>
            <ol className="list-decimal list-inside space-y-1 ml-4">
              <li>–û—Ç–∫—Ä–æ–π—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ç–µ–Ω–¥–µ—Ä–∞ (–≥–¥–µ –∑–∞–ª–æ–≥–∏–Ω–µ–Ω—ã)</li>
              <li>–ù–∞–∂–º–∏—Ç–µ Ctrl+U (Windows) –∏–ª–∏ Cmd+Option+U (Mac)</li>
              <li>–°–∫–æ–ø–∏—Ä—É–π—Ç–µ –≤–µ—Å—å HTML –∫–æ–¥</li>
              <li>–í—Å—Ç–∞–≤—å—Ç–µ –≤ –ø–æ–ª–µ "HTML –∫–æ–¥ —Å—Ç—Ä–∞–Ω–∏—Ü—ã"</li>
              <li>–ù–∞–∂–º–∏—Ç–µ "–†–∞—Å–ø–∞—Ä—Å–∏—Ç—å —Ç–µ–Ω–¥–µ—Ä"</li>
            </ol>

            <p className="mt-4 text-blue-700 font-medium">
              üí° –ò–ò –ø–æ–Ω–∏–º–∞–µ—Ç –ª—é–±—ã–µ —Å–∞–π—Ç—ã —Ç–µ–Ω–¥–µ—Ä–æ–≤ –∏ –∏–∑–≤–ª–µ–∫–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏!
            </p>
          </div>
        </Card>
      </div>
    </div>
  );
}
