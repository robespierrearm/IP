'use client';

import { useEffect, useState } from 'react';

export default function TestSimplePage() {
  const [isOnline, setIsOnline] = useState(true);
  const [logs, setLogs] = useState<string[]>([]);

  const addLog = (msg: string) => {
    const time = new Date().toLocaleTimeString();
    setLogs(prev => [`${time}: ${msg}`, ...prev].slice(0, 20));
    console.log(msg);
  };

  useEffect(() => {
    addLog(`–ù–∞—á–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å: ${navigator.onLine ? '–û–ù–õ–ê–ô–ù' : '–û–§–õ–ê–ô–ù'}`);
    setIsOnline(navigator.onLine);

    const handleOnline = () => {
      addLog('üü¢ –°–æ–±—ã—Ç–∏–µ: –û–ù–õ–ê–ô–ù');
      setIsOnline(true);
    };

    const handleOffline = () => {
      addLog('üî¥ –°–æ–±—ã—Ç–∏–µ: –û–§–õ–ê–ô–ù');
      setIsOnline(false);
    };

    window.addEventListener('online', handleOnline);
    window.addEventListener('offline', handleOffline);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
    const interval = setInterval(() => {
      const currentStatus = navigator.onLine;
      if (currentStatus !== isOnline) {
        addLog(`‚ö†Ô∏è –°—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–∏–ª—Å—è: ${currentStatus ? '–û–ù–õ–ê–ô–ù' : '–û–§–õ–ê–ô–ù'}`);
        setIsOnline(currentStatus);
      }
    }, 1000);

    return () => {
      window.removeEventListener('online', handleOnline);
      window.removeEventListener('offline', handleOffline);
      clearInterval(interval);
    };
  }, [isOnline]);

  return (
    <div className="min-h-screen bg-gray-50 p-4">
      <div className="max-w-2xl mx-auto">
        <h1 className="text-2xl font-bold mb-4">üîç –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –æ—Ñ–ª–∞–π–Ω</h1>
        
        {/* –ë–æ–ª—å—à–æ–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä */}
        <div className={`p-8 rounded-lg mb-6 text-center ${
          isOnline ? 'bg-green-500' : 'bg-red-500'
        }`}>
          <div className="text-6xl mb-4">
            {isOnline ? 'üü¢' : 'üî¥'}
          </div>
          <div className="text-white text-3xl font-bold">
            {isOnline ? '–û–ù–õ–ê–ô–ù' : '–û–§–õ–ê–ô–ù'}
          </div>
          <div className="text-white text-sm mt-2">
            navigator.onLine = {String(navigator.onLine)}
          </div>
        </div>

        {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è */}
        <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-4 mb-6">
          <h3 className="font-bold mb-2">üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:</h3>
          <ol className="list-decimal list-inside space-y-1 text-sm">
            <li>–°–º–æ—Ç—Ä–∏—Ç–µ –Ω–∞ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –≤—ã—à–µ</li>
            <li>–í–∫–ª—é—á–∏—Ç–µ –∞–≤–∏–∞—Ä–µ–∂–∏–º –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–µ</li>
            <li>–ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –¥–æ–ª–∂–µ–Ω —Å—Ç–∞—Ç—å –ö–†–ê–°–ù–´–ú üî¥</li>
            <li>–í—ã–∫–ª—é—á–∏—Ç–µ –∞–≤–∏–∞—Ä–µ–∂–∏–º</li>
            <li>–ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –¥–æ–ª–∂–µ–Ω —Å—Ç–∞—Ç—å –ó–ï–õ–Å–ù–´–ú üü¢</li>
          </ol>
        </div>

        {/* –õ–æ–≥–∏ */}
        <div className="bg-black text-green-400 p-4 rounded-lg font-mono text-xs">
          <div className="font-bold mb-2">–õ–û–ì–ò:</div>
          {logs.map((log, i) => (
            <div key={i}>{log}</div>
          ))}
        </div>

        {/* –ö–Ω–æ–ø–∫–∏ */}
        <div className="mt-4 grid grid-cols-2 gap-4">
          <button
            onClick={() => {
              addLog('üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞...');
              addLog(`navigator.onLine = ${navigator.onLine}`);
            }}
            className="bg-blue-500 text-white px-4 py-3 rounded-lg font-semibold"
          >
            üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å
          </button>
          <button
            onClick={() => {
              setLogs([]);
              addLog('üóëÔ∏è –õ–æ–≥–∏ –æ—á–∏—â–µ–Ω—ã');
            }}
            className="bg-gray-500 text-white px-4 py-3 rounded-lg font-semibold"
          >
            üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –ª–æ–≥–∏
          </button>
        </div>
      </div>
    </div>
  );
}
