'use client';

import { useEffect, useState } from 'react';
import { offlineSupabase } from '@/lib/offline-supabase';
import { offlineDB } from '@/lib/offline-db';

export default function TestOfflinePage() {
  const [logs, setLogs] = useState<string[]>([]);
  const [swStatus, setSWStatus] = useState('–ü—Ä–æ–≤–µ—Ä–∫–∞...');
  const [dbStatus, setDBStatus] = useState('–ü—Ä–æ–≤–µ—Ä–∫–∞...');
  const [cacheStatus, setCacheStatus] = useState('–ü—Ä–æ–≤–µ—Ä–∫–∞...');
  const [dataStatus, setDataStatus] = useState('–ü—Ä–æ–≤–µ—Ä–∫–∞...');

  const addLog = (message: string) => {
    setLogs(prev => [...prev, `${new Date().toLocaleTimeString()}: ${message}`]);
    console.log(message);
  };

  useEffect(() => {
    runDiagnostics();
  }, []);

  const runDiagnostics = async () => {
    addLog('üîç –ù–∞—á–∏–Ω–∞–µ–º –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É –æ—Ñ–ª–∞–π–Ω-—Ä–µ–∂–∏–º–∞...');

    // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ Service Worker
    addLog('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ Service Worker...');
    if ('serviceWorker' in navigator) {
      try {
        const registrations = await navigator.serviceWorker.getRegistrations();
        if (registrations.length > 0) {
          setSWStatus(`‚úÖ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω (${registrations.length})`);
          addLog(`‚úÖ Service Worker –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: ${registrations[0].active?.scriptURL}`);
          addLog(`   –°—Ç–∞—Ç—É—Å: ${registrations[0].active?.state}`);
        } else {
          setSWStatus('‚ùå –ù–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω');
          addLog('‚ùå Service Worker –ù–ï –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω');
        }
      } catch (error) {
        setSWStatus('‚ùå –û—à–∏–±–∫–∞');
        addLog(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ SW: ${error}`);
      }
    } else {
      setSWStatus('‚ùå –ù–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è');
      addLog('‚ùå Service Worker –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –±—Ä–∞—É–∑–µ—Ä–æ–º');
    }

    // 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ IndexedDB
    addLog('2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ IndexedDB...');
    try {
      await offlineDB.init();
      setDBStatus('‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
      addLog('‚úÖ IndexedDB –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ
      const tenders = await offlineDB.getAll('tenders');
      const suppliers = await offlineDB.getAll('suppliers');
      const expenses = await offlineDB.getAll('expenses');
      const pending = await offlineDB.getPendingChanges();

      addLog(`   –¢–µ–Ω–¥–µ—Ä–æ–≤ –≤ –∫—ç—à–µ: ${tenders.length}`);
      addLog(`   –ü–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –≤ –∫—ç—à–µ: ${suppliers.length}`);
      addLog(`   –†–∞—Å—Ö–æ–¥–æ–≤ –≤ –∫—ç—à–µ: ${expenses.length}`);
      addLog(`   –ù–µ—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö: ${pending.length}`);

      if (tenders.length > 0 || suppliers.length > 0 || expenses.length > 0) {
        setDataStatus(`‚úÖ –ï—Å—Ç—å –¥–∞–Ω–Ω—ã–µ (T:${tenders.length} S:${suppliers.length} E:${expenses.length})`);
      } else {
        setDataStatus('‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö');
        addLog('‚ö†Ô∏è –í IndexedDB –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö - –Ω—É–∂–Ω–∞ –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞');
      }
    } catch (error) {
      setDBStatus('‚ùå –û—à–∏–±–∫–∞');
      addLog(`‚ùå –û—à–∏–±–∫–∞ IndexedDB: ${error}`);
    }

    // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ Cache Storage
    addLog('3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ Cache Storage...');
    try {
      const cacheNames = await caches.keys();
      if (cacheNames.length > 0) {
        setCacheStatus(`‚úÖ –ê–∫—Ç–∏–≤–µ–Ω (${cacheNames.length} –∫—ç—à–µ–π)`);
        addLog(`‚úÖ Cache Storage –∞–∫—Ç–∏–≤–µ–Ω:`);
        cacheNames.forEach(name => addLog(`   - ${name}`));

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫—ç—à–∞
        const mainCache = cacheNames.find(name => name.includes('tendercrm'));
        if (mainCache) {
          const cache = await caches.open(mainCache);
          const keys = await cache.keys();
          addLog(`   –ó–∞–∫—ç—à–∏—Ä–æ–≤–∞–Ω–æ —Ä–µ—Å—É—Ä—Å–æ–≤: ${keys.length}`);
        }
      } else {
        setCacheStatus('‚ö†Ô∏è –ü—É—Å—Ç–æ–π');
        addLog('‚ö†Ô∏è Cache Storage –ø—É—Å—Ç–æ–π');
      }
    } catch (error) {
      setCacheStatus('‚ùå –û—à–∏–±–∫–∞');
      addLog(`‚ùå –û—à–∏–±–∫–∞ Cache Storage: ${error}`);
    }

    // 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–Ω–ª–∞–π–Ω/–æ—Ñ–ª–∞–π–Ω
    addLog('4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ç–∏...');
    const isOnline = navigator.onLine;
    addLog(`${isOnline ? 'üü¢' : 'üî¥'} –°—Ç–∞—Ç—É—Å: ${isOnline ? '–û–ù–õ–ê–ô–ù' : '–û–§–õ–ê–ô–ù'}`);

    // 5. –¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
    addLog('5Ô∏è‚É£ –¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ offlineSupabase...');
    try {
      const testTenders = await offlineSupabase.getTenders();
      addLog(`‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ç–µ–Ω–¥–µ—Ä–æ–≤: ${testTenders.length}`);
      if (testTenders.length > 0) {
        addLog(`   –ü–µ—Ä–≤—ã–π —Ç–µ–Ω–¥–µ—Ä: ${testTenders[0].name || testTenders[0].id}`);
      }
    } catch (error) {
      addLog(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö: ${error}`);
    }

    addLog('‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
  };

  const testOfflineMode = async () => {
    addLog('üß™ –¢–ï–°–¢: –°–∏–º—É–ª—è—Ü–∏—è –æ—Ñ–ª–∞–π–Ω-—Ä–µ–∂–∏–º–∞...');
    
    // –û—Ç–∫–ª—é—á–∞–µ–º —Å–µ—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ (—Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ—Å—Ç–∞)
    addLog('‚ö†Ô∏è –í–∫–ª—é—á–∏—Ç–µ –∞–≤–∏–∞—Ä–µ–∂–∏–º –≤—Ä—É—á–Ω—É—é –∏ –Ω–∞–∂–º–∏—Ç–µ "–¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ñ–ª–∞–π–Ω"');
  };

  const testOfflineLoad = async () => {
    addLog('üß™ –¢–ï–°–¢: –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ—Ñ–ª–∞–π–Ω...');
    
    try {
      const tenders = await offlineSupabase.getTenders();
      addLog(`${tenders.length > 0 ? '‚úÖ' : '‚ùå'} –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ç–µ–Ω–¥–µ—Ä–æ–≤: ${tenders.length}`);
      
      const suppliers = await offlineSupabase.getSuppliers();
      addLog(`${suppliers.length > 0 ? '‚úÖ' : '‚ùå'} –ó–∞–≥—Ä—É–∂–µ–Ω–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤: ${suppliers.length}`);
      
      const expenses = await offlineSupabase.getExpenses();
      addLog(`${expenses.length > 0 ? '‚úÖ' : '‚ùå'} –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ä–∞—Å—Ö–æ–¥–æ–≤: ${expenses.length}`);

      if (tenders.length === 0 && suppliers.length === 0 && expenses.length === 0) {
        addLog('‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤ IndexedDB!');
        addLog('üí° –†–µ—à–µ–Ω–∏–µ: –û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–æ–º —Å–Ω–∞—á–∞–ª–∞');
      } else {
        addLog('‚úÖ –û—Ñ–ª–∞–π–Ω-—Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç–∞–µ—Ç!');
      }
    } catch (error) {
      addLog(`‚ùå –û—à–∏–±–∫–∞: ${error}`);
    }
  };

  const clearAllData = async () => {
    if (!confirm('–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ? (–¥–ª—è —Ç–µ—Å—Ç–∞)')) return;
    
    addLog('üóëÔ∏è –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö...');
    try {
      await offlineSupabase.clearAllData();
      addLog('‚úÖ –î–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã');
      
      // –û—á–∏—â–∞–µ–º –∫—ç—à
      const cacheNames = await caches.keys();
      await Promise.all(cacheNames.map(name => caches.delete(name)));
      addLog('‚úÖ –ö—ç—à –æ—á–∏—â–µ–Ω');
      
      // –£–¥–∞–ª—è–µ–º SW
      const registrations = await navigator.serviceWorker.getRegistrations();
      await Promise.all(registrations.map(reg => reg.unregister()));
      addLog('‚úÖ Service Worker —É–¥–∞–ª—ë–Ω');
      
      addLog('‚úÖ –í—Å—ë –æ—á–∏—â–µ–Ω–æ. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É.');
    } catch (error) {
      addLog(`‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏: ${error}`);
    }
  };

  const forcePreload = async () => {
    addLog('üì• –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...');
    try {
      const tenders = await offlineSupabase.getTenders();
      addLog(`‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –∏ –∑–∞–∫—ç—à–∏—Ä–æ–≤–∞–Ω–æ —Ç–µ–Ω–¥–µ—Ä–æ–≤: ${tenders.length}`);
      
      const suppliers = await offlineSupabase.getSuppliers();
      addLog(`‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –∏ –∑–∞–∫—ç—à–∏—Ä–æ–≤–∞–Ω–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤: ${suppliers.length}`);
      
      const expenses = await offlineSupabase.getExpenses();
      addLog(`‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –∏ –∑–∞–∫—ç—à–∏—Ä–æ–≤–∞–Ω–æ —Ä–∞—Å—Ö–æ–¥–æ–≤: ${expenses.length}`);
      
      addLog('‚úÖ –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å –æ—Ñ–ª–∞–π–Ω!');
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
      runDiagnostics();
    } catch (error) {
      addLog(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∏: ${error}`);
    }
  };

  return (
    <div className="min-h-screen bg-gray-50 p-4">
      <div className="max-w-4xl mx-auto">
        <h1 className="text-2xl font-bold mb-4">üîß –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –æ—Ñ–ª–∞–π–Ω-—Ä–µ–∂–∏–º–∞</h1>
        
        {/* –°—Ç–∞—Ç—É—Å */}
        <div className="grid grid-cols-2 gap-4 mb-6">
          <div className="bg-white p-4 rounded-lg shadow">
            <div className="text-sm text-gray-600">Service Worker</div>
            <div className="font-semibold">{swStatus}</div>
          </div>
          <div className="bg-white p-4 rounded-lg shadow">
            <div className="text-sm text-gray-600">IndexedDB</div>
            <div className="font-semibold">{dbStatus}</div>
          </div>
          <div className="bg-white p-4 rounded-lg shadow">
            <div className="text-sm text-gray-600">Cache Storage</div>
            <div className="font-semibold">{cacheStatus}</div>
          </div>
          <div className="bg-white p-4 rounded-lg shadow">
            <div className="text-sm text-gray-600">–î–∞–Ω–Ω—ã–µ</div>
            <div className="font-semibold">{dataStatus}</div>
          </div>
        </div>

        {/* –ö–Ω–æ–ø–∫–∏ */}
        <div className="grid grid-cols-2 gap-4 mb-6">
          <button
            onClick={runDiagnostics}
            className="bg-blue-500 text-white px-4 py-3 rounded-lg font-semibold"
          >
            üîÑ –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É
          </button>
          <button
            onClick={forcePreload}
            className="bg-green-500 text-white px-4 py-3 rounded-lg font-semibold"
          >
            üì• –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
          </button>
          <button
            onClick={testOfflineLoad}
            className="bg-orange-500 text-white px-4 py-3 rounded-lg font-semibold"
          >
            üß™ –¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ñ–ª–∞–π–Ω
          </button>
          <button
            onClick={clearAllData}
            className="bg-red-500 text-white px-4 py-3 rounded-lg font-semibold"
          >
            üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –≤—Å—ë
          </button>
        </div>

        {/* –õ–æ–≥–∏ */}
        <div className="bg-black text-green-400 p-4 rounded-lg font-mono text-sm h-96 overflow-y-auto">
          {logs.map((log, i) => (
            <div key={i} className="mb-1">{log}</div>
          ))}
        </div>

        {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ */}
        <div className="mt-6 bg-yellow-50 border border-yellow-200 rounded-lg p-4">
          <h3 className="font-bold mb-2">üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é:</h3>
          <ol className="list-decimal list-inside space-y-2 text-sm">
            <li>–û—Ç–∫—Ä–æ–π—Ç–µ —ç—Ç—É —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–æ–º</li>
            <li>–ù–∞–∂–º–∏—Ç–µ "–ü—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ" (–µ—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç)</li>
            <li>–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –≤—Å–µ —Å—Ç–∞—Ç—É—Å—ã –∑–µ–ª—ë–Ω—ã–µ ‚úÖ</li>
            <li>–í–∫–ª—é—á–∏—Ç–µ –∞–≤–∏–∞—Ä–µ–∂–∏–º –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–µ</li>
            <li>–ù–∞–∂–º–∏—Ç–µ "–¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ñ–ª–∞–π–Ω"</li>
            <li>–ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∑–∏–ª–∏—Å—å - –æ—Ñ–ª–∞–π–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç! ‚úÖ</li>
            <li>–ï—Å–ª–∏ –Ω–µ—Ç - —Å–º–æ—Ç—Ä–∏—Ç–µ –ª–æ–≥–∏ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ ‚ùå</li>
          </ol>
        </div>
      </div>
    </div>
  );
}
