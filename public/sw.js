/**
 * Service Worker –¥–ª—è TenderCRM
 * –í–µ—Ä—Å–∏—è: v4-optimized
 * 
 * –°—Ç—Ä–∞—Ç–µ–≥–∏–∏ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è:
 * - –ù–∞–≤–∏–≥–∞—Ü–∏—è: Network First —Å fallback –Ω–∞ –∫—ç—à
 * - –°—Ç–∞—Ç–∏–∫–∞ (_next/static): Cache First —Å –¥–æ–ª–≥–∏–º TTL
 * - –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: Cache First —Å –æ—á–∏—Å—Ç–∫–æ–π —Å—Ç–∞—Ä—ã—Ö
 * - API: –ù–ï –∫—ç—à–∏—Ä—É–µ—Ç—Å—è (–æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç offlineSupabase)
 * 
 * –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏:
 * - –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–µ—Å—É—Ä—Å–æ–≤
 * - –£–º–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫—ç—à–µ–π
 * - Graceful degradation –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö
 * - –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –æ—Ñ–ª–∞–π–Ω-—Å—Ç—Ä–∞–Ω–∏—Ü—ã
 */

const CACHE_VERSION = 'v4-optimized';
const CACHE_NAME = `tendercrm-${CACHE_VERSION}`;
const RUNTIME_CACHE = `tendercrm-runtime-${CACHE_VERSION}`;
const IMAGE_CACHE_NAME = `tendercrm-images-${CACHE_VERSION}`;

// –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã –¥–ª—è –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∏ (–º–∏–Ω–∏–º—É–º –¥–ª—è —Ä–∞–±–æ—Ç—ã –æ—Ñ–ª–∞–π–Ω)
const CRITICAL_CACHE = [
  '/',
  '/m/login',
  '/m/dashboard',
  '/manifest.json',
  '/offline.html', // Fallback —Å—Ç—Ä–∞–Ω–∏—Ü–∞
];

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è (–∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –≤ —Ñ–æ–Ω–µ)
const EXTENDED_CACHE = [
  '/m/tenders',
  '/m/suppliers',
  '/m/accounting',
  '/m/settings',
];

// API —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã –¥–ª—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è
const API_ROUTES = [
  '/api/tenders',
  '/api/suppliers',
  '/api/expenses',
];

// –í—Ä–µ–º—è –∂–∏–∑–Ω–∏ –∫—ç—à–∞ (–≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö)
const CACHE_EXPIRATION = {
  api: 5 * 60 * 1000, // 5 –º–∏–Ω—É—Ç –¥–ª—è API
  images: 7 * 24 * 60 * 60 * 1000, // 7 –¥–Ω–µ–π –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
  static: 30 * 24 * 60 * 60 * 1000, // 30 –¥–Ω–µ–π –¥–ª—è —Å—Ç–∞—Ç–∏–∫–∏
};

// === –£–°–¢–ê–ù–û–í–ö–ê SERVICE WORKER ===
self.addEventListener('install', (event) => {
  console.log('üîß SW: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ v4-optimized...');
  
  event.waitUntil(
    (async () => {
      try {
        const cache = await caches.open(CACHE_NAME);
        
        // –°–æ–∑–¥–∞–µ–º —Ç–æ–ª—å–∫–æ –æ—Ñ–ª–∞–π–Ω-—Å—Ç—Ä–∞–Ω–∏—Ü—É (–Ω–µ —Ç—Ä–µ–±—É–µ—Ç —Å–µ—Ç–∏)
        await cache.put('/offline.html', new Response(
          createOfflinePage(),
          { headers: { 'Content-Type': 'text/html; charset=utf-8' } }
        ));
        
        console.log('‚úÖ Service Worker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (—Å—Ç—Ä–∞–Ω–∏—Ü—ã –±—É–¥—É—Ç –∫—ç—à–∏—Ä–æ–≤–∞—Ç—å—Å—è –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –ø–æ—Å–µ—â–µ–Ω–∏–∏)');
        
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ SW:', error);
      }
    })()
  );
  
  // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –Ω–æ–≤—ã–π SW —Å—Ä–∞–∑—É
  self.skipWaiting();
});

// === –ê–ö–¢–ò–í–ê–¶–ò–Ø SERVICE WORKER ===
self.addEventListener('activate', (event) => {
  console.log('‚úÖ SW: –ê–∫—Ç–∏–≤–∞—Ü–∏—è v4-optimized');
  
  event.waitUntil(
    (async () => {
      try {
        // 1. –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –≤–µ—Ä—Å–∏–∏ –∫—ç—à–∞
        const cacheNames = await caches.keys();
        const validCaches = [CACHE_NAME, RUNTIME_CACHE, IMAGE_CACHE_NAME];
        
        await Promise.all(
          cacheNames.map(cacheName => {
            if (!validCaches.includes(cacheName)) {
              console.log('üóëÔ∏è –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –∫—ç—à:', cacheName);
              return caches.delete(cacheName);
            }
          })
        );
        
        // 2. –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (—Å—Ç–∞—Ä—à–µ 7 –¥–Ω–µ–π)
        await cleanOldImages();
        
        console.log('‚úÖ –ê–∫—Ç–∏–≤–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ SW:', error);
      }
    })()
  );
  
  // –ë–µ—Ä–µ–º –∫–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–¥ –≤—Å–µ–º–∏ –∫–ª–∏–µ–Ω—Ç–∞–º–∏
  self.clients.claim();
});

// === –ü–ï–†–ï–•–í–ê–¢ –ó–ê–ü–†–û–°–û–í ===
self.addEventListener('fetch', (event) => {
  const { request } = event;
  const url = new URL(request.url);

  // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å—ã –∫ –¥—Ä—É–≥–∏–º –¥–æ–º–µ–Ω–∞–º
  if (url.origin !== location.origin) {
    return;
  }
  
  // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º Supabase (–æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç offlineSupabase —á–µ—Ä–µ–∑ IndexedDB)
  if (url.hostname.includes('supabase')) {
    return;
  }

  // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º API –∑–∞–ø—Ä–æ—Å—ã (–æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç offlineSupabase)
  if (url.pathname.startsWith('/api/')) {
    return;
  }

  // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º WebSocket –∏ EventSource
  if (request.mode === 'websocket' || request.destination === 'eventsource') {
    return;
  }

  // === –°–¢–†–ê–¢–ï–ì–ò–ò –ö–≠–®–ò–†–û–í–ê–ù–ò–Ø ===

  // 1. –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: Cache First —Å –¥–æ–ª–≥–∏–º TTL
  if (request.destination === 'image') {
    event.respondWith(handleImageRequest(request));
    return;
  }

  // 2. –ù–∞–≤–∏–≥–∞—Ü–∏—è: Network First —Å fallback –Ω–∞ –∫—ç—à
  if (request.mode === 'navigate') {
    event.respondWith(handleNavigationRequest(request));
    return;
  }

  // 3. Next.js —Å—Ç–∞—Ç–∏–∫–∞: Cache First (–¥–æ–ª–≥–∏–π TTL, immutable)
  if (url.pathname.startsWith('/_next/static/')) {
    event.respondWith(handleNextStaticRequest(request));
    return;
  }

  // 4. Next.js chunks –∏ –¥—Ä—É–≥–∏–µ —Ä–µ—Å—É—Ä—Å—ã: Stale While Revalidate
  if (url.pathname.startsWith('/_next/')) {
    event.respondWith(handleNextDynamicRequest(request));
    return;
  }

  // 5. –û—Å—Ç–∞–ª—å–Ω—ã–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã: Stale While Revalidate
  event.respondWith(handleStaticRequest(request));
});

// === –°—Ç—Ä–∞—Ç–µ–≥–∏–∏ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è ===

// Network First –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ (–ø–µ—Ä–µ—Ö–æ–¥—ã –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏)
async function handleNavigationRequest(request) {
  try {
    const response = await fetch(request);
    
    // –ö—ç—à–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç
    if (response.ok) {
      const cache = await caches.open(CACHE_NAME);
      cache.put(request, response.clone());
    }
    
    return response;
  } catch (error) {
    // –û—Ñ–ª–∞–π–Ω - –ø—ã—Ç–∞–µ–º—Å—è –≤–µ—Ä–Ω—É—Ç—å –∏–∑ –∫—ç—à–∞
    const cached = await caches.match(request);
    if (cached) {
      console.log('üì¶ –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–∑ –∫—ç—à–∞:', request.url);
      return cached;
    }
    
    // –ù–µ—Ç –≤ –∫—ç—à–µ - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    const fallback = await caches.match('/m/dashboard');
    if (fallback) {
      return fallback;
    }
    
    // –°–æ–≤—Å–µ–º –Ω–∏—á–µ–≥–æ –Ω–µ—Ç - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Ñ–ª–∞–π–Ω —Å—Ç—Ä–∞–Ω–∏—Ü—É
    return new Response(
      `<!DOCTYPE html>
      <html>
        <head>
          <meta charset="utf-8">
          <meta name="viewport" content="width=device-width, initial-scale=1">
          <title>–û—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º</title>
          <style>
            body { 
              font-family: system-ui; 
              display: flex; 
              align-items: center; 
              justify-content: center; 
              min-height: 100vh; 
              margin: 0;
              background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
              color: white;
              text-align: center;
              padding: 20px;
            }
            .container { max-width: 400px; }
            h1 { font-size: 3em; margin: 0 0 20px; }
            p { font-size: 1.2em; opacity: 0.9; }
          </style>
        </head>
        <body>
          <div class="container">
            <h1>üî¥</h1>
            <h2>–û—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º</h2>
            <p>–ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.</p>
          </div>
        </body>
      </html>`,
      { 
        status: 503,
        headers: { 'Content-Type': 'text/html; charset=utf-8' }
      }
    );
  }
}

// Network First –¥–ª—è API (—Å–≤–µ–∂–∏–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç)
async function handleApiRequest(request) {
  try {
    const response = await fetch(request);
    
    // –ö—ç—à–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—ã–µ GET –∑–∞–ø—Ä–æ—Å—ã
    if (request.method === 'GET' && response.ok) {
      const cache = await caches.open(API_CACHE_NAME);
      cache.put(request, response.clone());
    }
    
    return response;
  } catch (error) {
    // –û—Ñ–ª–∞–π–Ω - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏–∑ –∫—ç—à–∞
    const cached = await caches.match(request);
    if (cached) {
      console.log('üì¶ –í–æ–∑–≤—Ä–∞—â–∞–µ–º API –∏–∑ –∫—ç—à–∞:', request.url);
      return cached;
    }
    
    // –ù–µ—Ç –∫—ç—à–∞ - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É
    return new Response(
      JSON.stringify({ error: '–û—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º', offline: true }),
      { status: 503, headers: { 'Content-Type': 'application/json' } }
    );
  }
}

// Network First –¥–ª—è Next.js —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–µ—Å—É—Ä—Å–æ–≤ (—Å fallback –Ω–∞ –∫—ç—à –±–µ–∑ –≤–µ—Ä—Å–∏–∏)
async function handleNextStaticRequest(request) {
  // –£–±–∏—Ä–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤–µ—Ä—Å–∏–∏ –∏–∑ URL –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ–≥–æ –∫—ç—à–∞
  const url = new URL(request.url);
  url.searchParams.delete('v');
  const cleanUrl = url.toString();
  const cleanRequest = new Request(cleanUrl, {
    method: request.method,
    headers: request.headers,
  });

  try {
    // –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å —Å–µ—Ä–≤–µ—Ä–∞
    const response = await fetch(request);
    if (response.ok) {
      const cache = await caches.open(CACHE_NAME);
      cache.put(cleanRequest, response.clone());
      return response;
    }
  } catch (error) {
    // –û—Ñ–ª–∞–π–Ω - –∏—â–µ–º –≤ –∫—ç—à–µ
  }

  // Fallback –Ω–∞ –∫—ç—à (—Å –≤–µ—Ä—Å–∏–µ–π –∏–ª–∏ –±–µ–∑)
  const cached = await caches.match(cleanRequest) || await caches.match(request);
  if (cached) {
    return cached;
  }

  // –°–æ–≤—Å–µ–º –Ω–µ—Ç - 404
  return new Response('Not found', { status: 404 });
}

// Cache First –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
async function handleImageRequest(request) {
  const cached = await caches.match(request);
  if (cached) {
    return cached;
  }

  try {
    const response = await fetch(request);
    if (response.ok) {
      const cache = await caches.open(IMAGE_CACHE_NAME);
      cache.put(request, response.clone());
    }
    return response;
  } catch (error) {
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º placeholder –µ—Å–ª–∏ –Ω–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    return new Response('', { status: 404 });
  }
}

// Stale While Revalidate –¥–ª—è Next.js –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö —Ä–µ—Å—É—Ä—Å–æ–≤
async function handleNextDynamicRequest(request) {
  const cached = await caches.match(request);
  
  // –û–±–Ω–æ–≤–ª—è–µ–º –∫—ç—à –≤ —Ñ–æ–Ω–µ
  const fetchPromise = fetch(request).then(async (response) => {
    if (response && response.ok) {
      try {
        const cache = await caches.open(RUNTIME_CACHE);
        await cache.put(request, response.clone());
      } catch (err) {
        console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è:', err);
      }
    }
    return response;
  }).catch(() => {
    // –û—Ñ–ª–∞–π–Ω - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫—ç—à
    return cached || new Response('Not found', { status: 404 });
  });

  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫—ç—à —Å—Ä–∞–∑—É –µ—Å–ª–∏ –µ—Å—Ç—å, –∏–Ω–∞—á–µ –∂–¥—ë–º —Å–µ—Ç—å
  return cached || fetchPromise;
}

// Stale While Revalidate –¥–ª—è —Å—Ç–∞—Ç–∏–∫–∏
async function handleStaticRequest(request) {
  const cached = await caches.match(request);
  
  // –û–±–Ω–æ–≤–ª—è–µ–º –∫—ç—à –≤ —Ñ–æ–Ω–µ (—Ç–æ–ª—å–∫–æ –¥–ª—è GET –∑–∞–ø—Ä–æ—Å–æ–≤)
  const fetchPromise = fetch(request).then(async (response) => {
    if (response && response.ok && request.method === 'GET') {
      try {
        const responseToCache = response.clone();
        const cache = await caches.open(CACHE_NAME);
        await cache.put(request, responseToCache);
      } catch (err) {
        // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è
      }
    }
    return response;
  }).catch((error) => {
    // –û—Ñ–ª–∞–π–Ω - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏–∑ –∫—ç—à–∞ –µ—Å–ª–∏ –µ—Å—Ç—å
    if (cached) {
      return cached;
    }
    // –ù–µ—Ç –∫—ç—à–∞ - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º 404
    return new Response('Not found', { 
      status: 404,
      statusText: 'Not Found'
    });
  });

  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫—ç—à —Å—Ä–∞–∑—É –µ—Å–ª–∏ –µ—Å—Ç—å, –∏–Ω–∞—á–µ –∂–¥—ë–º —Å–µ—Ç—å
  return cached || fetchPromise;
}

// === Background Sync ===
self.addEventListener('sync', (event) => {
  console.log('üîÑ Background Sync:', event.tag);
  
  if (event.tag === 'sync-data') {
    event.waitUntil(syncData());
  }
});

async function syncData() {
  try {
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç—É –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
    const clients = await self.clients.matchAll();
    clients.forEach((client) => {
      client.postMessage({ type: 'SYNC_REQUEST' });
    });
    console.log('‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–ø—É—â–µ–Ω–∞');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:', error);
  }
}

// === Push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è ===
self.addEventListener('push', (event) => {
  console.log('üîî Push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ');
  
  let data = { title: 'TenderCRM', body: '–ù–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ' };
  
  if (event.data) {
    try {
      data = event.data.json();
    } catch (e) {
      data.body = event.data.text();
    }
  }

  const options = {
    body: data.body,
    icon: '/android-chrome-192x192.png',
    badge: '/android-chrome-192x192.png',
    vibrate: [200, 100, 200, 100, 200],
    data: data,
    actions: [
      { action: 'open', title: '–û—Ç–∫—Ä—ã—Ç—å' },
      { action: 'close', title: '–ó–∞–∫—Ä—ã—Ç—å' },
    ],
  };

  event.waitUntil(
    self.registration.showNotification(data.title || 'TenderCRM', options)
  );
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–æ–≤ –ø–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º
self.addEventListener('notificationclick', (event) => {
  event.notification.close();

  if (event.action === 'open' || !event.action) {
    event.waitUntil(
      clients.openWindow(event.notification.data?.url || '/m/dashboard')
    );
  }
});

// === –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è ===
self.addEventListener('periodicsync', (event) => {
  if (event.tag === 'sync-tenders') {
    event.waitUntil(syncData());
  }
});

// === –°–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞ ===
self.addEventListener('message', (event) => {
  if (event.data && event.data.type === 'SKIP_WAITING') {
    self.skipWaiting();
  }
});

// === –£—Ç–∏–ª–∏—Ç—ã ===

// –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ñ–ª–∞–π–Ω-—Å—Ç—Ä–∞–Ω–∏—Ü—ã
function createOfflinePage() {
  return `<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
  <title>–û—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º | TenderCRM</title>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }
    body {
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
      display: flex;
      align-items: center;
      justify-content: center;
      min-height: 100vh;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      color: white;
      text-align: center;
      padding: 20px;
    }
    .container {
      max-width: 400px;
      animation: fadeIn 0.5s ease-in;
    }
    .icon {
      font-size: 4em;
      margin-bottom: 20px;
      animation: pulse 2s infinite;
    }
    h1 {
      font-size: 2em;
      margin-bottom: 10px;
      font-weight: 600;
    }
    p {
      font-size: 1.1em;
      opacity: 0.9;
      line-height: 1.6;
      margin-bottom: 30px;
    }
    .button {
      display: inline-block;
      padding: 12px 30px;
      background: rgba(255, 255, 255, 0.2);
      border: 2px solid white;
      border-radius: 25px;
      color: white;
      text-decoration: none;
      font-weight: 600;
      transition: all 0.3s ease;
      cursor: pointer;
    }
    .button:hover {
      background: rgba(255, 255, 255, 0.3);
      transform: translateY(-2px);
    }
    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(20px); }
      to { opacity: 1; transform: translateY(0); }
    }
    @keyframes pulse {
      0%, 100% { transform: scale(1); }
      50% { transform: scale(1.1); }
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="icon">üî¥</div>
    <h1>–û—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º</h1>
    <p>–ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.</p>
    <button class="button" onclick="window.location.reload()">–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞</button>
  </div>
</body>
</html>`;
}

// –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
async function cleanOldImages() {
  try {
    const cache = await caches.open(IMAGE_CACHE_NAME);
    const requests = await cache.keys();
    const now = Date.now();
    
    for (const request of requests) {
      const response = await cache.match(request);
      if (response) {
        const dateHeader = response.headers.get('date');
        if (dateHeader) {
          const age = now - new Date(dateHeader).getTime();
          // –£–¥–∞–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ä—à–µ 7 –¥–Ω–µ–π
          if (age > CACHE_EXPIRATION.images) {
            await cache.delete(request);
            console.log('üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ —Å—Ç–∞—Ä–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:', request.url);
          }
        }
      }
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:', error);
  }
}
