import { Tender } from './supabase';

/**
 * –¢–∏–ø—ã —É–º–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è —Ç–µ–Ω–¥–µ—Ä–æ–≤
 */
export type NotificationType = 
  | 'deadline_urgent'      // –î–µ–¥–ª–∞–π–Ω < 3 –¥–Ω–µ–π (–Ω–æ–≤—ã–π)
  | 'deadline_soon'        // –î–µ–¥–ª–∞–π–Ω 3-7 –¥–Ω–µ–π (–Ω–æ–≤—ã–π)
  | 'deadline_normal'      // –î–µ–¥–ª–∞–π–Ω > 7 –¥–Ω–µ–π (–Ω–æ–≤—ã–π)
  | 'awaiting_results'     // –ñ–¥—ë–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ (–ø–æ–¥–∞–Ω–æ)
  | 'under_review_normal'  // –ù–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏ < 7 –¥–Ω–µ–π
  | 'under_review_long'    // –ù–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏ > 7 –¥–Ω–µ–π (–¥–æ–ª–≥–æ!)
  | 'work_start_soon'      // –°–∫–æ—Ä–æ –Ω–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç (–ø–æ–±–µ–¥–∞)
  | 'work_in_progress'     // –í —Ä–∞–±–æ—Ç–µ (–≤ —Ä–∞–±–æ—Ç–µ)
  | 'completed'            // –ó–∞–≤–µ—Ä—à–µ–Ω–æ
  | 'lost'                 // –ü—Ä–æ–∏–≥—Ä–∞–ª–∏
  | null;                  // –ù–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è

export interface TenderNotification {
  type: NotificationType;
  message: string;
  shortMessage: string;  // –î–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫
  icon: string;
  color: 'red' | 'orange' | 'yellow' | 'green' | 'blue' | 'purple' | 'gray';
  priority: 'urgent' | 'high' | 'normal' | 'low';
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å —É–º–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è —Ç–µ–Ω–¥–µ—Ä–∞
 */
export function getSmartNotification(tender: Tender): TenderNotification | null {
  switch (tender.status) {
    case '–Ω–æ–≤—ã–π':
      return getNewTenderNotification(tender);
    case '–ø–æ–¥–∞–Ω–æ':
      return getSubmittedTenderNotification(tender);
    case '–Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏':
      return getUnderReviewNotification(tender);
    case '–ø–æ–±–µ–¥–∞':
      return getWonTenderNotification(tender);
    case '–≤ —Ä–∞–±–æ—Ç–µ':
      return getInProgressNotification(tender);
    case '–∑–∞–≤–µ—Ä—à—ë–Ω':
      return getCompletedNotification(tender);
    case '–ø—Ä–æ–∏–≥—Ä—ã—à':
      return getLostNotification(tender);
    default:
      return null;
  }
}

/**
 * –ù–û–í–´–ô –¢–ï–ù–î–ï–† - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ–¥–ª–∞–π–Ω
 */
function getNewTenderNotification(tender: Tender): TenderNotification | null {
  if (!tender.submission_deadline) return null;

  const daysLeft = getDaysUntilDate(tender.submission_deadline);
  
  if (daysLeft < 0) {
    return {
      type: 'deadline_urgent',
      message: '–î–µ–¥–ª–∞–π–Ω –ø—Ä–æ—Å—Ä–æ—á–µ–Ω',
      shortMessage: '–ü—Ä–æ—Å—Ä–æ—á–µ–Ω',
      icon: '‚ö†Ô∏è',
      color: 'gray',
      priority: 'low',
    };
  }
  
  if (daysLeft === 0) {
    return {
      type: 'deadline_urgent',
      message: '–î–µ–¥–ª–∞–π–Ω –°–ï–ì–û–î–ù–Ø!',
      shortMessage: '–°–µ–≥–æ–¥–Ω—è!',
      icon: 'üî•',
      color: 'red',
      priority: 'urgent',
    };
  }
  
  if (daysLeft === 1) {
    return {
      type: 'deadline_urgent',
      message: '–î–µ–¥–ª–∞–π–Ω –ó–ê–í–¢–†–ê!',
      shortMessage: '–ó–∞–≤—Ç—Ä–∞',
      icon: '‚ö°',
      color: 'red',
      priority: 'urgent',
    };
  }
  
  if (daysLeft <= 3) {
    return {
      type: 'deadline_urgent',
      message: `–î–µ–¥–ª–∞–π–Ω —á–µ—Ä–µ–∑ ${daysLeft} ${getDaysWord(daysLeft)}`,
      shortMessage: `${daysLeft} –¥–Ω.`,
      icon: 'üî•',
      color: 'red',
      priority: 'urgent',
    };
  }
  
  if (daysLeft <= 7) {
    return {
      type: 'deadline_soon',
      message: `–î–µ–¥–ª–∞–π–Ω —á–µ—Ä–µ–∑ ${daysLeft} ${getDaysWord(daysLeft)}`,
      shortMessage: `${daysLeft} –¥–Ω.`,
      icon: '‚è∞',
      color: 'orange',
      priority: 'high',
    };
  }
  
  return {
    type: 'deadline_normal',
    message: `–î–µ–¥–ª–∞–π–Ω —á–µ—Ä–µ–∑ ${daysLeft} ${getDaysWord(daysLeft)}`,
    shortMessage: `${daysLeft} –¥–Ω.`,
    icon: 'üìÖ',
    color: 'gray',
    priority: 'normal',
  };
}

/**
 * –ü–û–î–ê–ù–û - –∂–¥—ë–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
 */
function getSubmittedTenderNotification(tender: Tender): TenderNotification | null {
  if (!tender.submission_deadline) return null;

  const daysUntilResults = getDaysUntilDate(tender.submission_deadline);
  
  if (daysUntilResults < 0) {
    return {
      type: 'awaiting_results',
      message: '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ–±—ä—è–≤–ª–µ–Ω—ã',
      shortMessage: '–ñ–¥—ë–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤',
      icon: '‚è≥',
      color: 'yellow',
      priority: 'high',
    };
  }
  
  if (daysUntilResults === 0) {
    return {
      type: 'awaiting_results',
      message: '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –°–ï–ì–û–î–ù–Ø',
      shortMessage: '–°–µ–≥–æ–¥–Ω—è',
      icon: 'üéØ',
      color: 'orange',
      priority: 'high',
    };
  }
  
  if (daysUntilResults === 1) {
    return {
      type: 'awaiting_results',
      message: '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ó–ê–í–¢–†–ê',
      shortMessage: '–ó–∞–≤—Ç—Ä–∞',
      icon: 'üéØ',
      color: 'orange',
      priority: 'high',
    };
  }
  
  return {
    type: 'awaiting_results',
    message: `–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —á–µ—Ä–µ–∑ ${daysUntilResults} ${getDaysWord(daysUntilResults)}`,
    shortMessage: `–ß–µ—Ä–µ–∑ ${daysUntilResults} –¥–Ω.`,
    icon: '‚è≥',
    color: 'blue',
    priority: 'normal',
  };
}

/**
 * –ù–ê –†–ê–°–°–ú–û–¢–†–ï–ù–ò–ò - —Å–∫–æ–ª—å–∫–æ –∂–¥—ë–º
 */
function getUnderReviewNotification(tender: Tender): TenderNotification | null {
  if (!tender.submission_date) return null;

  const daysInReview = getDaysSinceDate(tender.submission_date);
  
  if (daysInReview > 7) {
    return {
      type: 'under_review_long',
      message: `–ù–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏ ${daysInReview} ${getDaysWord(daysInReview)}`,
      shortMessage: `${daysInReview} –¥–Ω. ‚ö†Ô∏è`,
      icon: '‚ö†Ô∏è',
      color: 'orange',
      priority: 'high',
    };
  }
  
  return {
    type: 'under_review_normal',
    message: `–ù–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏ ${daysInReview} ${getDaysWord(daysInReview)}`,
    shortMessage: `${daysInReview} –¥–Ω.`,
    icon: '‚è≥',
    color: 'yellow',
    priority: 'normal',
  };
}

/**
 * –ü–û–ë–ï–î–ê - –∫–æ–≥–¥–∞ –Ω–∞—á–∏–Ω–∞–µ–º —Ä–∞–±–æ—Ç—ã
 */
function getWonTenderNotification(tender: Tender): TenderNotification | null {
  // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª–µ start_date –≤ –±—É–¥—É—â–µ–º
  return {
    type: 'work_start_soon',
    message: '–ì–æ—Ç–æ–≤—å—Ç–µ—Å—å –∫ –Ω–∞—á–∞–ª—É —Ä–∞–±–æ—Ç',
    shortMessage: '–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç',
    icon: 'üéâ',
    color: 'purple',
    priority: 'normal',
  };
}

/**
 * –í –†–ê–ë–û–¢–ï - —Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π –≤ —Ä–∞–±–æ—Ç–µ
 */
function getInProgressNotification(tender: Tender): TenderNotification | null {
  if (!tender.submission_date) return null;

  const daysInProgress = getDaysSinceDate(tender.submission_date);
  
  return {
    type: 'work_in_progress',
    message: `–í —Ä–∞–±–æ—Ç–µ ${daysInProgress} ${getDaysWord(daysInProgress)}`,
    shortMessage: `${daysInProgress} –¥–Ω.`,
    icon: 'üî®',
    color: 'green',
    priority: 'normal',
  };
}

/**
 * –ó–ê–í–ï–†–®–Å–ù
 */
function getCompletedNotification(tender: Tender): TenderNotification | null {
  return {
    type: 'completed',
    message: '–¢–µ–Ω–¥–µ—Ä –∑–∞–≤–µ—Ä—à—ë–Ω',
    shortMessage: '–ó–∞–≤–µ—Ä—à—ë–Ω',
    icon: '‚úÖ',
    color: 'gray',
    priority: 'low',
  };
}

/**
 * –ü–†–û–ò–ì–†–´–®
 */
function getLostNotification(tender: Tender): TenderNotification | null {
  return {
    type: 'lost',
    message: '–¢–µ–Ω–¥–µ—Ä –ø—Ä–æ–∏–≥—Ä–∞–Ω',
    shortMessage: '–ü—Ä–æ–∏–≥—Ä–∞–Ω',
    icon: '‚ùå',
    color: 'gray',
    priority: 'low',
  };
}

/**
 * –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò
 */

// –ü–æ–ª—É—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –¥–æ –¥–∞—Ç—ã
function getDaysUntilDate(dateString: string): number {
  const targetDate = new Date(dateString);
  const now = new Date();
  now.setHours(0, 0, 0, 0);
  targetDate.setHours(0, 0, 0, 0);
  const diffTime = targetDate.getTime() - now.getTime();
  return Math.ceil(diffTime / (1000 * 60 * 60 * 24));
}

// –ü–æ–ª—É—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π —Å –¥–∞—Ç—ã
function getDaysSinceDate(dateString: string): number {
  const startDate = new Date(dateString);
  const now = new Date();
  now.setHours(0, 0, 0, 0);
  startDate.setHours(0, 0, 0, 0);
  const diffTime = now.getTime() - startDate.getTime();
  return Math.ceil(diffTime / (1000 * 60 * 60 * 24));
}

// –°–∫–ª–æ–Ω–µ–Ω–∏–µ —Å–ª–æ–≤–∞ "–¥–µ–Ω—å"
function getDaysWord(days: number): string {
  const lastDigit = days % 10;
  const lastTwoDigits = days % 100;
  
  if (lastTwoDigits >= 11 && lastTwoDigits <= 14) {
    return '–¥–Ω–µ–π';
  }
  
  if (lastDigit === 1) {
    return '–¥–µ–Ω—å';
  }
  
  if (lastDigit >= 2 && lastDigit <= 4) {
    return '–¥–Ω—è';
  }
  
  return '–¥–Ω–µ–π';
}
