'use client';

import { m, AnimatePresence } from 'framer-motion';
import { Tender, STATUS_LABELS } from '@/lib/supabase';
import { getStatusColor } from '@/lib/tender-utils';
import { formatPrice, formatDate } from '@/lib/utils';
import { Calendar, DollarSign, MapPin, ExternalLink, FileText, Edit, Bell, Clock } from 'lucide-react';
import { useRouter } from 'next/navigation';

interface TenderDetailsModalProps {
  tender: Tender | null;
  onClose: () => void;
  onUpdate: () => void;
}

/**
 * –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –¥–µ—Ç–∞–ª—è–º–∏ —Ç–µ–Ω–¥–µ—Ä–∞ (–º–æ–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è)
 * –í—ã–Ω–µ—Å–µ–Ω–æ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
 */
export function TenderDetailsModal({ tender, onClose, onUpdate }: TenderDetailsModalProps) {
  const router = useRouter();

  if (!tender) return null;

  const handleEdit = () => {
    router.push(`/m/tenders/edit/${tender.id}`);
  };

  // –†–∞—Å—á–µ—Ç –¥–Ω–µ–π –¥–æ –¥–µ–¥–ª–∞–π–Ω–∞
  const getDaysUntilDeadline = () => {
    if (!tender.submission_deadline) return null;
    const deadline = new Date(tender.submission_deadline);
    const now = new Date();
    now.setHours(0, 0, 0, 0);
    deadline.setHours(0, 0, 0, 0);
    const diffTime = deadline.getTime() - now.getTime();
    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
    return diffDays;
  };

  const daysLeft = getDaysUntilDeadline();
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–≤–µ—Ç –¥–µ–¥–ª–∞–π–Ω–∞
  const getDeadlineColor = () => {
    if (!daysLeft) return null;
    if (daysLeft < 0) return 'expired'; // –ü—Ä–æ—Å—Ä–æ—á–µ–Ω
    if (daysLeft <= 3) return 'urgent'; // –°—Ä–æ—á–Ω–æ
    if (daysLeft <= 7) return 'soon'; // –°–∫–æ—Ä–æ
    return 'normal'; // –ù–æ—Ä–º–∞–ª—å–Ω–æ
  };

  const deadlineColor = getDeadlineColor();

  return (
    <AnimatePresence>
      {tender && (
        <m.div
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          exit={{ opacity: 0 }}
          transition={{ duration: 0.2 }}
          className="fixed inset-0 bg-black/50 z-50 flex items-end"
          onClick={onClose}
        >
          <m.div
            drag="y"
            dragConstraints={{ top: 0, bottom: 0 }}
            dragElastic={{ top: 0, bottom: 0.5 }}
            onDragEnd={(e, info) => {
              if (info.offset.y > 100) {
                onClose();
              }
            }}
            initial={{ y: '100%' }}
            animate={{ y: 0 }}
            exit={{ y: '100%' }}
            transition={{ type: 'spring', damping: 30, stiffness: 300 }}
            className="bg-white rounded-t-3xl w-full flex flex-col"
            style={{ maxHeight: 'min(80vh, 700px)', marginBottom: '80px' }}
            onClick={(e: React.MouseEvent) => e.stopPropagation()}
          >
            {/* –®–∞–ø–∫–∞ - sticky */}
            <div className="sticky top-0 bg-white z-10 px-6 pt-3 pb-4 border-b border-gray-100">
              {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å–≤–∞–π–ø–∞ */}
              <div className="flex justify-center mb-3">
                <div className="w-12 h-1 bg-gray-300 rounded-full"></div>
              </div>

              {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ + –°—Ç–∞—Ç—É—Å */}
              <div className="flex items-start justify-between gap-3">
                <h2 className="text-xl font-bold text-gray-900 flex-1">
                  {tender.name}
                </h2>
                {tender.status !== '–Ω–æ–≤—ã–π' && (
                  <span
                    className={`px-3 py-1 rounded-lg text-xs font-medium whitespace-nowrap ${getStatusColor(
                      tender.status
                    )}`}
                  >
                    {STATUS_LABELS[tender.status]}
                  </span>
                )}
              </div>
            </div>

            {/* –ö–æ–Ω—Ç–µ–Ω—Ç - —Å–∫—Ä–æ–ª–ª–∏—Ç—Å—è */}
            <div className="flex-1 overflow-y-auto px-6 py-4">
              <div className="space-y-3">
                
                {/* –î–ï–î–õ–ê–ô–ù - –ü–ï–†–í–û–ï –ú–ï–°–¢–û! */}
                {tender.submission_deadline && (
                  <div className={`rounded-xl p-4 border-l-4 ${
                    deadlineColor === 'expired' ? 'bg-gradient-to-r from-gray-100 to-gray-50 border-gray-500' :
                    deadlineColor === 'urgent' ? 'bg-gradient-to-r from-red-50 to-orange-50 border-red-500' :
                    deadlineColor === 'soon' ? 'bg-gradient-to-r from-yellow-50 to-orange-50 border-yellow-500' :
                    'bg-gradient-to-r from-green-50 to-emerald-50 border-green-500'
                  }`}>
                    <div className="flex items-center justify-between">
                      <div>
                        <div className="flex items-center gap-2 mb-1">
                          <Clock className={`w-4 h-4 ${
                            deadlineColor === 'expired' ? 'text-gray-600' :
                            deadlineColor === 'urgent' ? 'text-red-600' :
                            deadlineColor === 'soon' ? 'text-yellow-600' :
                            'text-green-600'
                          }`} />
                          <p className={`text-xs font-medium ${
                            deadlineColor === 'expired' ? 'text-gray-600' :
                            deadlineColor === 'urgent' ? 'text-red-600' :
                            deadlineColor === 'soon' ? 'text-yellow-600' :
                            'text-green-600'
                          }`}>
                            –î–ï–î–õ–ê–ô–ù –ü–û–î–ê–ß–ò
                          </p>
                        </div>
                        <p className={`text-2xl font-bold ${
                          deadlineColor === 'expired' ? 'text-gray-900' :
                          deadlineColor === 'urgent' ? 'text-red-900' :
                          deadlineColor === 'soon' ? 'text-yellow-900' :
                          'text-green-900'
                        }`}>
                          {formatDate(tender.submission_deadline)}
                        </p>
                      </div>
                      {daysLeft !== null && (
                        <div className="text-right">
                          <p className={`text-xs ${
                            deadlineColor === 'expired' ? 'text-gray-600' :
                            deadlineColor === 'urgent' ? 'text-red-600' :
                            deadlineColor === 'soon' ? 'text-yellow-600' :
                            'text-green-600'
                          }`}>
                            {daysLeft < 0 ? '–ü—Ä–æ—Å—Ä–æ—á–µ–Ω' : '–û—Å—Ç–∞–ª–æ—Å—å'}
                          </p>
                          <p className={`text-xl font-bold ${
                            deadlineColor === 'expired' ? 'text-gray-900' :
                            deadlineColor === 'urgent' ? 'text-red-900' :
                            deadlineColor === 'soon' ? 'text-yellow-900' :
                            'text-green-900'
                          }`}>
                            {Math.abs(daysLeft)} {Math.abs(daysLeft) === 1 ? '–¥–µ–Ω—å' : daysLeft >= 2 && daysLeft <= 4 ? '–¥–Ω—è' : '–¥–Ω–µ–π'}
                          </p>
                        </div>
                      )}
                    </div>
                    {deadlineColor === 'urgent' && (
                      <div className="flex items-center gap-2 mt-2 pt-2 border-t border-red-200">
                        <Bell className="w-4 h-4 text-red-600 animate-pulse" />
                        <p className="text-xs text-red-700 font-medium">‚ö†Ô∏è –°–†–û–ß–ù–û! –¢—Ä–µ–±—É–µ—Ç—Å—è –≤–Ω–∏–º–∞–Ω–∏–µ</p>
                      </div>
                    )}
                  </div>
                )}

                {/* –°–ï–ö–¶–ò–Ø: –û–°–ù–û–í–ù–û–ï */}
                <div className="bg-blue-50 rounded-xl p-4 border-l-4 border-blue-500">
                  <h3 className="text-xs font-bold text-blue-900 mb-3 flex items-center gap-2">
                    <FileText className="w-4 h-4" />
                    –û–°–ù–û–í–ù–û–ï
                  </h3>
                  <div className="space-y-2">
                    {tender.purchase_number && (
                      <div>
                        <p className="text-xs text-blue-600">üìÑ –ù–æ–º–µ—Ä –∑–∞–∫—É–ø–∫–∏</p>
                        <p className="font-mono text-sm font-medium text-blue-900">{tender.purchase_number}</p>
                      </div>
                    )}
                    {tender.region && (
                      <div>
                        <p className="text-xs text-blue-600">üìç –†–µ–≥–∏–æ–Ω</p>
                        <p className="text-sm font-medium text-blue-900">{tender.region}</p>
                      </div>
                    )}
                    {tender.link && (
                      <a
                        href={tender.link}
                        target="_blank"
                        rel="noopener noreferrer"
                        className="flex items-center gap-2 text-sm text-blue-700 font-medium hover:text-blue-900 transition-colors"
                      >
                        <ExternalLink className="w-4 h-4" />
                        <span>üîó –û—Ç–∫—Ä—ã—Ç—å —Ç–µ–Ω–¥–µ—Ä ‚Üí</span>
                      </a>
                    )}
                  </div>
                </div>

                {/* –°–ï–ö–¶–ò–Ø: –î–ê–¢–´ */}
                <div className="bg-orange-50 rounded-xl p-4 border-l-4 border-orange-500">
                  <h3 className="text-xs font-bold text-orange-900 mb-3 flex items-center gap-2">
                    <Calendar className="w-4 h-4" />
                    –î–ê–¢–´
                  </h3>
                  <div className="grid grid-cols-2 gap-3">
                    <div className="bg-white rounded-lg p-3">
                      <p className="text-xs text-orange-600 mb-1">–ü—É–±–ª–∏–∫–∞—Ü–∏—è</p>
                      <p className="text-sm font-bold text-orange-900">
                        {tender.publication_date ? formatDate(tender.publication_date) : '‚Äî'}
                      </p>
                    </div>
                    {tender.submission_date && (
                      <div className="bg-white rounded-lg p-3">
                        <p className="text-xs text-orange-600 mb-1">–ü–æ–¥–∞—á–∞</p>
                        <p className="text-sm font-bold text-orange-900">
                          {formatDate(tender.submission_date)}
                        </p>
                      </div>
                    )}
                  </div>
                </div>

                {/* –°–ï–ö–¶–ò–Ø: –§–ò–ù–ê–ù–°–´ */}
                <div className="bg-green-50 rounded-xl p-4 border-l-4 border-green-500">
                  <h3 className="text-xs font-bold text-green-900 mb-3 flex items-center gap-2">
                    <DollarSign className="w-4 h-4" />
                    –§–ò–ù–ê–ù–°–´
                  </h3>
                  <div className="space-y-2">
                    {tender.start_price && (
                      <div className="bg-gray-50 rounded-lg p-3 border-l-4 border-gray-400">
                        <p className="text-xs text-gray-600">–ù–∞—á–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞</p>
                        <p className="text-lg font-bold text-gray-900">{formatPrice(tender.start_price)}</p>
                      </div>
                    )}
                    {tender.submitted_price && (
                      <div className="bg-blue-50 rounded-lg p-3 border-l-4 border-blue-500">
                        <p className="text-xs text-blue-600">–¶–µ–Ω–∞ –ø–æ–¥–∞—á–∏</p>
                        <p className="text-lg font-bold text-blue-900">{formatPrice(tender.submitted_price)}</p>
                      </div>
                    )}
                    {tender.win_price && (
                      <div className="bg-purple-50 rounded-lg p-3 border-l-4 border-purple-500">
                        <p className="text-xs text-purple-600">–¶–µ–Ω–∞ –ø–æ–±–µ–¥—ã</p>
                        <p className="text-lg font-bold text-purple-900">{formatPrice(tender.win_price)}</p>
                      </div>
                    )}
                  </div>
                </div>

              </div>
            </div>

            {/* –§—É—Ç–µ—Ä - sticky */}
            <div className="sticky bottom-0 bg-white border-t border-gray-100 px-6 py-4">
              <div className="flex gap-3">
                <button
                  onClick={handleEdit}
                  className="flex-1 py-3 bg-gradient-to-br from-primary-500 to-secondary-600 text-white font-medium rounded-xl transition-all active:scale-95 flex items-center justify-center gap-2"
                >
                  <Edit className="w-4 h-4" />
                  –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                </button>
                <button
                  onClick={onClose}
                  className="px-6 py-3 bg-gray-100 hover:bg-gray-200 text-gray-700 font-medium rounded-xl transition-colors"
                >
                  –ó–∞–∫—Ä—ã—Ç—å
                </button>
              </div>
            </div>
          </m.div>
        </m.div>
      )}
    </AnimatePresence>
  );
}
